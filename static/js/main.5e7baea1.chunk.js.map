{"version":3,"sources":["components/common/TextInput.js","components/common/SelectInput.js","components/estimator/EstimatorForm.js","estimator.js","components/estimator/EstimatorPage.js","components/estimator/EstimatorResultPage.js","components/PageNotFound.js","App.js","index.js"],"names":["TextInput","props","name","label","onChange","placeholder","value","error","wrapperClass","length","className","htmlFor","type","SelectInput","defaultOption","options","map","option","data-period-type","key","EstimatorForm","estimator","onSave","saving","errors","timeToElapse","periodType","reportedCases","population","totalHospitalBeds","onSubmit","role","data-population","data-time-to-elapse","data-reported-cases","data-total-hospital-beds","data-go-estimate","disabled","covid19ImpactEstimator","data","region","avgDailyIncomeInUSD","avgDailyIncomePopulation","impact","severeImpact","estimateTime","parseInt","days","power","Math","trunc","convertWeeksAndMonthsToDays","currentlyInfected","infectionsByRequestedTime","severeCasesByRequestedTime","thirtyFivePercent","impactBed","hospitalBedsByRequestedTime","difference","impactInfections","severeInfections","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","amountImpact","dollarsInFlight","amountInFlight","EstimatorPage","useState","avgAge","setEstimator","setErrors","Values","setValues","redirect","setRedirect","setSaving","id","event","target","prevEstimator","preventDefault","Object","keys","formIsValid","assign","returnResult","Estimator","console","log","setTimeout","toast","success","to","pathname","state","EstimatorResultPage","location","PageNotFound","App","exact","path","component","autoClose","hideProgressBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e7baea1.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextInput = (props) => {\n  const { name, label, onChange, placeholder, value, error } = props;\n  let wrapperClass = \"form-group\";\n  if (error && error.length > 0) {\n    wrapperClass += \" \" + \"has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={name}>{label}</label>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          {...props}\n          name={name}\n          className=\"form-control\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectInput = (props) => {\n  const {\n    name,\n    label,\n    onChange,\n    defaultOption,\n    value,\n    error,\n    options\n  } = props;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"field\">\n        {/* Note, value is set here rather than on the option - docs: https://facebook.github.io/react/docs/forms.html */}\n        <select\n          name={name}\n          onChange={onChange}\n          className=\"form-control\"\n        >\n          <option value=\"\">{defaultOption}</option>\n          {options.map(option => {\n            return (\n              <option data-period-type key={option} value={option}>\n                {option}\n              </option>\n            );\n          })}\n        </select>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultOption: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  error: PropTypes.string,\n  options: PropTypes.array.isRequired,\n};\n\nexport default SelectInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"../common/TextInput\";\nimport SelectInput from \"../common/SelectInput\";\n\nconst EstimatorForm = ({\n  estimator,\n  onSave,\n  onChange,\n  saving = false,\n  errors = {}\n}) => {\n  const { \n    periodType,\n    timeToElapse,\n    reportedCases,\n    population,\n    totalHospitalBeds\n  } = estimator;\n  return (\n    <form onSubmit={onSave}>\n      {errors.onSave && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errors.onSave} \n        </div>\n      )}\n      <TextInput\n        name=\"population\"\n        label=\"Population\"\n        value={population}\n        onChange={onChange}\n        data-population\n        error={errors.population}\n      />\n\n      <TextInput\n        name=\"timeToElapse\"\n        label=\"Estimated Time\"\n        data-time-to-elapse\n        value={timeToElapse}\n        onChange={onChange}\n        error={errors.timeToElapse}\n      />\n\n      <TextInput\n        name=\"reportedCases\"\n        label=\"Reported Cases\"\n        data-reported-cases\n        value={reportedCases}\n        onChange={onChange}\n        error={errors.reportedCases}\n      />\n\n      <TextInput\n        name=\"totalHospitalBeds\"\n        label=\"Total Hospital Beds\"\n        data-total-hospital-beds\n        value={totalHospitalBeds}\n        onChange={onChange}\n        error={errors.totalHospitalBeds}\n      />\n\n      <SelectInput\n        name=\"periodType\"\n        label=\"Period Type\"\n        value=\"\"\n        defaultOption=\"Select Period Type\"\n        data-period-type\n        options={[\"days\", \"weeks\", \"months\"]}\n        onChange={onChange}\n        error={errors.periodType}\n      />\n\n      <button data-go-estimate type=\"submit\" disabled={saving} className=\"btn btn-primary\">\n        {saving ? \"Saving...\" : \"Save\"}\n      </button>\n    </form>\n  );\n};\n\nEstimatorForm.propTypes = {\n  estimator: PropTypes.object.isRequired,\n  errors: PropTypes.object,\n  onSave: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  saving: PropTypes.bool\n};\n\nexport default EstimatorForm;\n","const convertWeeksAndMonthsToDays = (periodType, timeToElapse) => {\r\n  let estimateTime = parseInt(timeToElapse, 10);\r\n  if (periodType === 'weeks') {\r\n    estimateTime *= 7;\r\n  } else if (periodType === 'months') {\r\n    estimateTime *= 30;\r\n  }\r\n  return {\r\n    days: estimateTime,\r\n    power: Math.trunc(estimateTime / 3)\r\n  };\r\n};\r\nconst covid19ImpactEstimator = (data) => {\r\n  const {\r\n    region,\r\n    periodType,\r\n    reportedCases,\r\n    timeToElapse,\r\n    totalHospitalBeds\r\n  } = data;\r\n  const {\r\n    avgDailyIncomeInUSD,\r\n    avgDailyIncomePopulation\r\n  } = region;\r\n  const impact = {};\r\n  const severeImpact = {};\r\n  const {\r\n    days,\r\n    power\r\n  } = convertWeeksAndMonthsToDays(periodType, timeToElapse);\r\n  impact.currentlyInfected = reportedCases * 10;\r\n  severeImpact.currentlyInfected = reportedCases * 50;\r\n  impact.infectionsByRequestedTime = impact.currentlyInfected * (2 ** power);\r\n  severeImpact.infectionsByRequestedTime = severeImpact.currentlyInfected * (2 ** power);\r\n  impact.severeCasesByRequestedTime = 0.15 * impact.infectionsByRequestedTime;\r\n  severeImpact.severeCasesByRequestedTime = 0.15 * severeImpact.infectionsByRequestedTime;\r\n  const thirtyFivePercent = 0.35 * totalHospitalBeds;\r\n  const impactBed = thirtyFivePercent - impact.severeCasesByRequestedTime;\r\n  impact.hospitalBedsByRequestedTime = Math.trunc(impactBed);\r\n  const difference = thirtyFivePercent - severeImpact.severeCasesByRequestedTime;\r\n  severeImpact.hospitalBedsByRequestedTime = Math.trunc(difference);\r\n  const impactInfections = Math.trunc(impact.infectionsByRequestedTime);\r\n  const severeInfections = Math.trunc(severeImpact.infectionsByRequestedTime);\r\n  impact.casesForICUByRequestedTime = Math.trunc(0.05 * impactInfections);\r\n  severeImpact.casesForICUByRequestedTime = Math.trunc(0.05 * severeInfections);\r\n  impact.casesForVentilatorsByRequestedTime = Math.trunc(0.02 * impactInfections);\r\n  severeImpact.casesForVentilatorsByRequestedTime = Math.trunc(0.02 * severeInfections);\r\n  const amountImpact = (impactInfections * avgDailyIncomePopulation * avgDailyIncomeInUSD) / days;\r\n  impact.dollarsInFlight = Math.trunc(amountImpact);\r\n  const amountInFlight = (severeInfections * avgDailyIncomePopulation * avgDailyIncomeInUSD) / days;\r\n  severeImpact.dollarsInFlight = Math.trunc(amountInFlight);\r\n  const result = {\r\n    data: { ...data },\r\n    impact,\r\n    severeImpact\r\n  };\r\n  return result;\r\n};\r\nexport default covid19ImpactEstimator;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EstimatorForm from \"./EstimatorForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Estimator from \"../../estimator\"\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport const EstimatorPage = () => {\r\n    const [estimator, setEstimator] = useState({\r\n        region: {\r\n            name: \"Africa\",\r\n            avgAge: 19.7,\r\n            avgDailyIncomeInUSD: 5,\r\n            avgDailyIncomePopulation: 0.71\r\n        },\r\n        periodType: \"\",\r\n        timeToElapse: \"\",\r\n        reportedCases: \"\",\r\n        population: \"\",\r\n        totalHospitalBeds: \"\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [Values, setValues] = useState({});\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [saving, setSaving] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setEstimator(prevEstimator => ({\r\n            ...prevEstimator,\r\n            [name]: value\r\n        }))\r\n        \r\n    }\r\n    const formIsValid = () => {\r\n        const { periodType,\r\n                timeToElapse,\r\n                reportedCases,\r\n                population,\r\n                totalHospitalBeds\r\n        } = estimator;\r\n        const errors = {};\r\n\r\n        if (!periodType) errors.periodType = \"Period type is required\";\r\n        if (!timeToElapse) errors.timeToElapse = \"Estimated time is required\";\r\n        if (!reportedCases) errors.reportedCases = \"Reported cases is required\";\r\n        if (!population) errors.population = \"Population is required\";\r\n        if (!totalHospitalBeds) errors.totalHospitalBeds = \"Total hospital beds is required\";\r\n\r\n        setErrors(errors);\r\n        // Form is valid if the errors object still has no properties\r\n        return Object.keys(errors).length === 0;\r\n    }\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n        if (!formIsValid()) return;\r\n        setSaving(true);\r\n        const data = {};\r\n        Object.assign(data, estimator);\r\n        data.population = parseInt(data.population);\r\n        data.reportedCases = parseInt(data.reportedCases);\r\n        data.totalHospitalBeds = parseInt(data.totalHospitalBeds);\r\n        data.timeToElapse = parseInt(data.timeToElapse);\r\n        const returnResult = Estimator(data)\r\n        setValues({...returnResult})\r\n        console.log(returnResult);\r\n        setTimeout(() => {\r\n            toast.success(\"Estimator data saved.\");\r\n            setRedirect(true);\r\n        }, 2000)\r\n    }\r\n    return (\r\n        <div id=\"main-form\">\r\n            <h2 id=\"h3-form\" className=\"text-danger my-2\">Estimator Form</h2>\r\n            <EstimatorForm \r\n            estimator={estimator} \r\n            errors={errors}  \r\n            onChange={handleChange}\r\n            onSave={handleSave}\r\n            saving={saving}\r\n            />\r\n            {redirect && <Redirect to={{pathname: '/result', state: Values}}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\n// EstimatorPage.propTypes = {\r\n//     history: PropTypes.object.isRequired,\r\n//     returnResult: PropTypes.object.isRequired\r\n// }\r\n\r\nexport default EstimatorPage;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst EstimatorResultPage = ({location}) => {\r\n    const { impact, severeImpact } = location.state;\r\n    return <div className=\"container py-5 myGrid\">\r\n                <div className=\"card mx-2\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-danger my-2\">Impact Cases</h2>\r\n                        <p>Currently Infected : <span>{impact.currentlyInfected}</span></p>\r\n                        <p>Infections By Requested Time : <span>{impact.infectionsByRequestedTime}</span></p>\r\n                        <p>Severe Cases By Requested Time : <span>{impact.severeCasesByRequestedTime}</span></p>\r\n                        <p>Hospital Beds By Requested Time : <span>{impact.hospitalBedsByRequestedTime}</span></p>\r\n                        <p>Cases For ICU By Requested Time : <span>{impact.casesForICUByRequestedTime}</span></p>\r\n                        <p>Cases For Ventilators By Requested Time : <span>{impact.casesForVentilatorsByRequestedTime}</span></p>\r\n                        <p>Dollars In Flight : <span>{impact.dollarsInFlight}</span></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card mx-2\">\r\n                    <div className=\"card-body\">\r\n                        <h2 className=\"text-danger my-2\">Severe Impact Cases</h2>\r\n                        <p>Currently Infected : <span>{severeImpact.currentlyInfected}</span></p>\r\n                        <p>Infections By Requested Time : <span>{severeImpact.infectionsByRequestedTime}</span></p>\r\n                        <p>Severe Cases By Requested Time : <span>{severeImpact.severeCasesByRequestedTime}</span></p>\r\n                        <p>Hospital Beds By Requested Time : <span>{severeImpact.hospitalBedsByRequestedTime}</span></p>\r\n                        <p>Cases For ICU By Requested Time : <span>{severeImpact.casesForICUByRequestedTime}</span></p>\r\n                        <p>Cases For Ventilators By Requested Time : <span>{severeImpact.casesForVentilatorsByRequestedTime}</span></p>\r\n                        <p>Dollars In Flight : <span>{severeImpact.dollarsInFlight}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default EstimatorResultPage;","import React from 'react';\r\n\r\nconst PageNotFound = () => <h1>Oops Page not found</h1>\r\n\r\n\r\nexport default PageNotFound;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport EstimatorPage from './components/estimator/EstimatorPage'\nimport EstimatorResultPage from './components/estimator/EstimatorResultPage'\nimport PageNotFound from './components/PageNotFound';\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\"\n\n\n\nconst App = () => (\n    <div className=\"container-fluid\">\n        <Switch>\n            <Route exact path=\"/\" component={EstimatorPage}/>\n            <Route path=\"/result\" component={EstimatorResultPage}/>\n            <Route component={PageNotFound}/>\n        </Switch>\n        <ToastContainer autoClose={3000} hideProgressBar />\n    </div>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}